import os
import glob
import ffmpeg
import argparse

# –ü–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
parser = argparse.ArgumentParser(description="üêì HikvisionCameraRemux")

# –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
parser.add_argument(
    "directory",
    type=str,
    help="–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞–º–∏ - videos/{directory}",
)

# –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
args = parser.parse_args()

print("üêì HikvisionCameraRemux\n")

# –°–æ–∑–¥–∞–¥–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
if not os.path.isdir("videos"):
    os.makedirs("videos")

if not os.path.isdir(os.path.join("remuxed", args.directory)):
    os.makedirs(os.path.join("remuxed", args.directory))

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
source_files = sorted(glob.glob(os.path.join("videos", args.directory, "*.mp4")))

for file_path in source_files:
    try:
        print(f"üìπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ-—Ñ–∞–π–ª–∞ '{file_path}'")

        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        base_name = os.path.basename(file_path)

        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –≤–∏–¥–µ–æ-—Ñ–∞–π–ª–∞
        probe = ffmpeg.probe(file_path)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ
        duration = probe["streams"][0]["duration"]

        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        print(f"   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {int(float(duration))} —Å")

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞
        output_parameters = {
            "c:v": "copy",
            "y": None,
            "hide_banner": None,
            "loglevel": "error",
        }

        # –ü—É—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        output_filename = os.path.join("remuxed", args.directory, base_name)

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ñ–∞–π–ª
        stream = ffmpeg.input(file_path)
        stream = ffmpeg.output(stream, output_filename, **output_parameters)
        stream.run()

        # –ù–∞—Ö–æ–¥–∏–º —Ä–∞–∑–º–µ—Ä –Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ
        file_size = os.path.getsize(output_filename)

        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        print(f"   –†–∞–∑–º–µ—Ä: {file_size:,} –±–∞–π—Ç")
        print("üòä –ì–æ—Ç–æ–≤–æ\n")

    except ffmpeg.Error as e:
        print(f"\n\nAn error occurred: {e.stderr.decode('utf-8')}")
